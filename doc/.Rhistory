aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token <- filter(lyrics_token,
str_detect(word, '^[a-z]') &
(genre %in% c("Pop")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token$sentiment = plyr::mapvalues(lyrics_token$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token$sentiment = if_else(!(lyrics_token$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token$sentiment)
sample_n(lyrics_token, size = 15)
count_words <- count(lyrics_token, word, sentiment, sort = TRUE)
gw <- group_by(lyrics_token, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w <- group_by(lyrics_token, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
suppressWarnings(print(plt))
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token_metal <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token_metal <- filter(lyrics_token_metal,
str_detect(word, '^[a-z]') &
(genre %in% c("Metal")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token_metal$sentiment = plyr::mapvalues(lyrics_token_metal$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token_metal$sentiment = if_else(!(lyrics_token_metal$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token_metal$sentiment)
sample_n(lyrics_token_metal, size = 15)
count_words <- count(lyrics_token_metal, word, sentiment, sort = TRUE)
gw1 <- group_by(lyrics_token_metal, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w1 <- group_by(lyrics_token_metal, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
## World cloud sentiment in pop
temp5 <- group_by(gw1, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp5,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp1), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt1))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
gw <- group_by(lyrics_token, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w <- group_by(lyrics_token, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt))
## World cloud sentiment in pop
temp5 <- group_by(gw1, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp5,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp1), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt1))
## World cloud sentiment in pop
temp5 <- group_by(gw1, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp5,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp1), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing
suppressWarnings(print(plt1))
View(temp4)
View(temp5)
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token_pop <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token_pop <- filter(lyrics_token,
str_detect(word, '^[a-z]') &
(genre %in% c("Pop")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token_pop$sentiment = plyr::mapvalues(lyrics_token_pop$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token_pop$sentiment = if_else(!(lyrics_token_pop$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token_pop$sentiment)
sample_n(lyrics_token_pop, size = 15)
count_words <- count(lyrics_token_pop, word, sentiment, sort = TRUE)
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token_pop <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token_pop <- filter(lyrics_token_pop,
str_detect(word, '^[a-z]') &
(genre %in% c("Pop")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token_pop$sentiment = plyr::mapvalues(lyrics_token_pop$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token_pop$sentiment = if_else(!(lyrics_token_pop$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token_pop$sentiment)
sample_n(lyrics_token_pop, size = 15)
count_words <- count(lyrics_token_pop, word, sentiment, sort = TRUE)
gw <- group_by(lyrics_token, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w <- group_by(lyrics_token, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
gw <- group_by(lyrics_token_pop, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w <- group_by(lyrics_token_pop, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
View(temp1)
## World cloud sentiment in pop
temp4 <- group_by(gw, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp4,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp4), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing  because the figure is constrained in size in R note book.
suppressWarnings(print(plt1))
# The image below is saved in fig folder after running the code through console.
suppressWarnings(print(plt1))
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token_metal <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token_metal <- filter(lyrics_token_metal,
str_detect(word, '^[a-z]') &
(genre %in% c("Metal")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token_metal$sentiment = plyr::mapvalues(lyrics_token_metal$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token_metal$sentiment = if_else(!(lyrics_token_metal$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token_metal$sentiment)
sample_n(lyrics_token_metal, size = 15)
count_words <- count(lyrics_token_metal, word, sentiment, sort = TRUE)
gw1 <- group_by(lyrics_token_metal, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w1 <- group_by(lyrics_token_metal, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
## Word cloud sentiment in Metal
temp5 <- group_by(gw1, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp5,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp5), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing  because the figure is constrained in size in R note book.
suppressWarnings(print(plt1))
# The image below is saved in fig folder after running the code through console.
wordcloud(word_count_metal_song_artist$word,word_count_metal_song_artist$n,
scale=c(5,0.2),
max.words=100,
min.freq=2,
random.order=FALSE,
rot.per=0.5,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Yellow"))
wordcloud(word_count_metal_song_artist$word,word_count_metal_song_artist$n,
scale=c(5,0.2),
max.words=100,
min.freq=2,
random.order=FALSE,
rot.per=0.5,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Yellows"))
wordcloud(word_count_metal_song_artist$word,word_count_metal_song_artist$n,
scale=c(5,0.2),
max.words=100,
min.freq=2,
random.order=FALSE,
rot.per=0.5,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Greens"))
wordcloud(word_count_metal_song$word,word_count_metal_song$n,
scale=c(5,0.2),
max.words=100,
min.freq=2,
random.order=FALSE,
rot.per=0.5,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Greens"))
View(temp2)
#The bing emotion is a list of English words and their associations with three basic emotions (negative, positive, neutral)
lyrics_token_metal <- unnest_tokens(dt_lyrics,
input = lyrics,
output = word,
token = 'words',
drop = TRUE,
to_lower = TRUE)
lyrics_token_metal <- filter(lyrics_token_metal,
str_detect(word, '^[a-z]') &
(genre %in% c("Metal")) &
nchar(word) >= 3)
bing = get_sentiments('bing')
lyrics_token_metal$sentiment = plyr::mapvalues(lyrics_token_metal$word,
bing$word, bing$sentiment,
warn_missing = FALSE)
lyrics_token_metal$sentiment = if_else(!(lyrics_token_metal$sentiment %in% c('positive', 'negative')),
'neutral', lyrics_token_metal$sentiment)
sample_n(lyrics_token_metal, size = 15)
count_words <- count(lyrics_token_metal, word, sentiment, sort = TRUE)
gw1 <- group_by(lyrics_token_metal, decade, sentiment, word) %>%
summarise(gw_c = n()) %>%
ungroup() %>%
group_by(decade) %>%
mutate(gw_p = gw_c / sum(gw_c)) %>%
ungroup() %>%
arrange(decade, desc(gw_p)) %>%
group_by(word) %>%
mutate(w_c = sum(gw_c))
w1 <- group_by(lyrics_token_metal, sentiment, word) %>%
summarise(w_c = n()) %>%
ungroup() %>%
mutate(w_p = w_c / sum(w_c)) %>%
arrange(desc(w_c))
## Word cloud sentiment in Metal
temp5 <- group_by(gw1, decade, sentiment) %>%
arrange(desc(gw_p)) %>%
filter(row_number() < 60) %>%
mutate(angle = 90 * sample(c(0, 1), n(), replace = TRUE, prob = c(70, 30)),
freq_sd = (gw_c - min(gw_c)) / (max(gw_c) - min(gw_c))) %>%
ungroup()
options(repr.plot.width = 10, repr.plot.height = 40)
plt1 <- ggplot(data = temp5,
aes(label = word,
size = freq_sd,
color = factor(sample.int(10, nrow(temp5), replace = TRUE)),
angle = angle)) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 10) +
facet_wrap(decade ~ sentiment, nrow = 5) +
theme(text = element_text(size = 15))
#Run the follwing line in console for better plot sizing  because the figure is constrained in size in R note book.
suppressWarnings(print(plt1))
# The image below is saved in fig folder after running the code through console.
